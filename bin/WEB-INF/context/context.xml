<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
  	
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"      
         destroy-method="close">           
     <property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://rds47wqe3k8986jy5604o.mysql.rds.aliyuncs.com:3306/saoyisao?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="saoyisao" />
		<property name="password" value="Saoyisao2017" />
		<!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="10" />
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="100" />
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="50" />
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="5" />
        <!--#给出一条简单的sql语句进行验证-->
        <property name="validationQuery" value="select NOW()" />
        <!--#在取出连接时进行有效验证-->
        <property name="testOnBorrow" value="false" />
        <property name="testWhileIdle" value="true" />
        <property name="logAbandoned" value="true" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="10" />
        <!-- #运行'判断连接超时任务'的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
        <property name="timeBetweenEvictionRunsMillis" value="10000" />
        <!-- #连接的超时时间，默认为半小时。 -->
        <property name="minEvictableIdleTimeMillis" value="10000" />	 
  </bean> 
 <!-- 
 <bean id="dataSource" class="com.alibaba.appengine.api.ds.DataSourceFactory"
 factory-method = "getDataSource"  >
 	<constructor-arg value="rds_herborist_36_7470" />
 </bean> 
 	-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource"/>
		</property>
	</bean>
	
	<bean id="transactionProxyFactory" lazy-init="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="query*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="set*">PROPAGATION_REQUIRED</prop>
				<prop key="load*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="meta*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="submit*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="sqlMapClient"
        class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="WEB-INF/ibatis/ibatis.xml"/>
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
        <property name="sqlMapClient">
            <ref bean="sqlMapClient"/>
        </property>
  	</bean>
  	
  	<bean id="abstractDAO" class="com.swm.common.dao.AbstractDAO" abstract="true">
        <property name="sqlMapClientTemplate">
            <ref bean="sqlMapClientTemplate"/>
        </property>
  	</bean>
  	
  	
 
  	<bean id="dataSourceUtil" class="com.swm.common.util.DataSourceUtil">  
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
  	</bean>
  	
    
  	
  	<bean id="springUtil" class="com.swm.common.util.SpringUtil"/>
  	
</beans>